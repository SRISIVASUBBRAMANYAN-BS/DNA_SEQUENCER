from PIL import Image, ImageDraw
import matplotlib.pyplot as plt
import numpy as np

def create_dna_image(sequence):
    image_width = 1000
    image_height = 500
    image = Image.new("RGB", (image_width, image_height), "white")
    draw = ImageDraw.Draw(image)

    # DNA helix parameters
    base_width = 10
    base_height = 100
    helix_padding = 50

    # Calculate the number of bases that can fit in the image
    num_bases = min(len(sequence), image_width // (base_width + helix_padding))

    # Calculate the starting position for drawing the DNA helix
    start_x = (image_width - (num_bases * (base_width + helix_padding))) // 2
    start_y = (image_height - base_height) // 2

    # Draw the DNA helix
    for i in range(num_bases):
        base = sequence[i]
        x = start_x + (i * (base_width + helix_padding))

        # Draw base pairs
        if base == "A":
            draw.rectangle([(x, start_y), (x + base_width, start_y + base_height)], fill="green")
            draw.text((x + base_width //2 , start_y + base_height + 5), base, fill="black", anchor="n")
            draw.text((x + base_width // 2, start_y - 15), "T", fill="black", anchor="s")
        elif base == "T":
            draw.rectangle([(x, start_y), (x + base_width, start_y + base_height)], fill="red")
            draw.text((x + base_width // 2, start_y + base_height + 5), base, fill="black", anchor="n")
            draw.text((x + base_width // 2, start_y - 15), "A", fill="black", anchor="s")
        elif base == "G":
            draw.rectangle([(x, start_y), (x + base_width, start_y + base_height)], fill="blue")
            draw.text((x + base_width // 2, start_y + base_height + 5), base, fill="black", anchor="n")
            draw.text((x + base_width // 2, start_y - 15), "C", fill="black", anchor="s")
        elif base == "C":
            draw.rectangle([(x, start_y), (x + base_width, start_y + base_height)], fill="yellow")
            draw.text((x + base_width // 2, start_y + base_height + 5), base, fill="black", anchor="n")
            draw.text((x + base_width // 2, start_y - 15), "G", fill="black", anchor="s")

    return image

def generate_dna_image(sequence):
    dna_image = create_dna_image(sequence)
    plt.imshow(np.array(dna_image))
    plt.axis('off')
    plt.show()


sequence = "ATGCCCCAACTAATAG"
generate_dna_image(sequence)
